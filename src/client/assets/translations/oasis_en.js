const { a, em, strong } = require('../../../server/node_modules/hyperaxe');
module.exports = {
  en: {
    languageName: "English",
  extended: "Multiverse",
  extendedDescription: [
    "When you support someone you may download posts from the inhabitants they support, and those posts show up here, sorted by recency.",
  ],
  popular: "Highlights",
  popularDescription: [
    "Posts from inhabitants in your network, ",
    strong("sorted by spreads"),
    ". Select the period of time, to get a list.",
  ],
    day: "Day",
    week: "Week",
    month: "Month",
    year: "Year",
    latest: "Latest",
    latestDescription: [
      strong("Posts"),
      " from yourself and inhabitants you support, sorted by recency.",
    ],
    topics: "Topics",
    topicsDescription: [
      strong("Topics"),
      " from yourself and inhabitants you support, sorted by recency. Select the timestamp of any post to see the rest of the thread.",
    ],
    summaries: "Summaries",
    summariesDescription: [
      strong("Topics and some comments"),
      " from yourself and inhabitants you support, sorted by recency. Select the timestamp of any post to see the rest of the thread.",
    ],
    threads: "Threads",
    threadsDescription: [
      strong("Posts that have comments"),
      " from inhabitants you support and your multiverse, sorted by recency. Select the timestamp of any post to see the rest of the thread.",
    ],
    profile: "Avatar",
    inhabitants: "Inhabitants", 
    manualMode: "Manual Mode",
    mentions: "Mentions",
    mentionsDescription: [
      strong("Posts that @mention you"),
      ", sorted by recency.",
    ],
    private: "Inbox",
    peers: "Peers",
    privateDescription: [
      "The latest comment from ",
      strong("private threads that include you"),
      ", sorted by recency. Private posts are encrypted for your public key, and have a maximum of 7 recipients. Recipients cannot be added after the thread has started. Select the timestamp to view the full thread.",
    ],
    search: "Search",
    imageSearch: "Image Search",
    searchPlaceholder: "Seek for inhabitants, #hashtags and keywords...",
    settings: "Settings",
    continueReading: "continue reading",
    moreComments: "more comment",
    readThread: "read the rest of the thread",    
    // modules
    modules: "Modules",
    modulesViewTitle: "Modules",
    modulesViewDescription: "Set your environment by enabling or disabling modules.",
    inbox: "Inbox",
    multiverse: "Multiverse",
    popularLabel: "⌘ Highlights",
    topicsLabel: "ϟ Topics",
    latestLabel: "☄ Latest",
    summariesLabel: "※ Summaries",
    threadsLabel: "♺ Threads",
    multiverseLabel: "∞ Multiverse",
    inboxLabel: "☂ Inbox",
    invitesLabel: "ꔹ Invites",
    walletLabel: "❄ Wallet",
    legacyLabel: "ꖤ Keys",
    cipherLabel: "ꗄ Crypter",
    saveSettings: "Save configuration",
    // post actions
    comment: "Comment",
    subtopic: "Subtopic",
    json: "JSON",
    // relationships
    unfollow: "Unsupport",
    follow: "Support",
    block: "Block",
    unblock: "Unblock",
    newerPosts: "Newer posts",
    olderPosts: "Older posts",
    feedRangeEmpty: "The given range is empty for this feed. Try viewing the ",
    seeFullFeed: "full feed",
    feedEmpty: "The Oasis client has never seen posts from this account.",
    beginningOfFeed: "This is the beginning of the feed",
    noNewerPosts: "No newer posts have been received yet.",
    relationshipNotFollowing: "You are not supported",
    relationshipTheyFollow: "They support",
    relationshipMutuals: "Mutual support",
    relationshipFollowing: "You are supporting",
    relationshipYou: "You",
    relationshipBlocking: "You are blocking",
    relationshipNone: "You are not supporting",
    relationshipConflict: "Conflict",
    relationshipBlockingPost: "Blocked post",
    // spreads view
    viewLikes: "View spreads",
    spreadedDescription: "List of posts spread by the inhabitant.",
    likedBy: " -> Spreads",
    // composer
    attachFiles: "Attach files",
    mentionsMatching: "Matching mentions",
    preview: "Preview",
    publish: "Write",
    contentWarningPlaceholder: "Add a subject to the post (optional)",
    privateWarningPlaceholder: "Add inhabitants to send a private post (ex: @bob @alice) (optional)",
    publishWarningPlaceholder: "...",
    publishCustomDescription: [
      "REMEMBER: Due to blockchain technology, once a post is published it cannot be edited or deleted.",
    ],
    commentWarning: [
      "REMEMBER: Due to blockchain technology, once a post is published it cannot be edited or deleted.",
    ],
    commentPublic: "public",
    commentPrivate: "private",
    commentLabel: ({ publicOrPrivate, markdownUrl }) => [
    ],
    publishLabel: ({ markdownUrl, linkTarget }) => [
      "REMEMBER: Due to blockchain technology, once a post is published it cannot be edited or deleted.",
    ],
    replyLabel: ({ markdownUrl }) => [
      "REMEMBER: Due to blockchain technology, once a post is published it cannot be edited or deleted.",
    ],
    publishCustomInfo: ({ href }) => [
      "If you have experience, you can also ",
      a({ href }, "write an advanced post"),
      ".",
    ],
    publishBasicInfo: ({ href }) => [
      "If you have not experience, you should ",
      a({ href }, "write a post"),
      ".",
    ],
    publishCustom: "Write advanced post",
    subtopicLabel: ({ markdownUrl }) => [
      "Create a ",
      strong("public subtopic"),
      " of this post with ",
      a({ href: markdownUrl }, "Markdown"),
      ". Posts cannot be edited or deleted. To respond to an entire thread, select ",
      strong("comment"),
      " instead. Preview shows attached media.",
    ],
    // settings
    updateit: "Get updates",
    info: "Info",
    settingsIntro: ({ version }) => [
      `Oasis: [${version}]`,
    ],
    timeAgo: "ago",
    sendTime: "about ",
    theme: "Theme",
    legacy: "Keys",
    legacyTitle: "Keys",
    legacyDescription: "Manage your secret (private key) quickly and safely.",   
    legacyExportButton: "Export",
    legacyImportButton: "Import",
    exportTitle: "Export data",
    exportDescription: "Set password (min 32 characters long) to encrypt your key",
    importTitle: "Import data",
    importDescription: "Import your encrypted secret (private key) to enable your avatar",
    importAttach: "Attach encrypted file (.enc)",    
    passwordLengthInfo: "Password must be at least 32 characters long.",
    passwordImport: "Write your password to decrypt data that will be saved at your system home (name: secret)",
    randomPassword: "Random password",
    exportPasswordPlaceholder: "Use lowercase, uppercase, numbers & symbols",
    fileInfo: "Your encrypted secret key will be saved at your system home (name: oasis.enc)",
    themeIntro:
      "Choose a theme.",
    setTheme: "Set theme",
    language: "Language",
    languageDescription:
      "If you'd like to use another language, select it here.",
    setLanguage: "Set language",
    status: "Status",
    peerConnections: "Peers",
    peerConnectionsIntro: "Manage all your connections with other peers.",
    online: "Online",
    supported: "Supported",
    recommended: "Recommended", 
    blocked: "Blocked",
    noConnections: "No peers connected.",
    noSupportedConnections: "No peers supported.",
    noBlockedConnections: "No peers blocked.",
    noRecommendedConnections: "No peers recommended.",
    connectionActionIntro:
      "",
    startNetworking: "Start networking",
    stopNetworking: "Stop networking",
    restartNetworking: "Restart networking",
    sync: "Sync network",
    indexes: "Indexes",
    indexesDescription:
      "Rebuilding your indexes is safe, and may fix some types of bugs.",
    invites: "Invites",
    invitesDescription:
      "Use the PUB's invite codes here.",
    acceptInvite: "Accept invite",
    acceptedInvites: "Federated Networks",
    noInvites: "No invites accepted.",
    // search page
    searchLabel: "Seek inhabitants and keywords, among the posts you have downloaded.",
    // image search page
    imageSearchLabel: "Enter words to search for images labelled with them.",
    // posts and comments
    commentDescription: ({ parentUrl }) => [
      " commented on ",
      a({ href: parentUrl }, " thread"),
    ],
    commentTitle: ({ authorName }) => [`Comment on @${authorName}'s post`],
    subtopicDescription: ({ parentUrl }) => [
      " created a subtopic from ",
      a({ href: parentUrl }, " a post"),
    ],
    subtopicTitle: ({ authorName }) => [`Subtopic on @${authorName}'s post`],
    mysteryDescription: "posted a mysterious post",
    // misc
    oasisDescription: "SNH Project Network",
    submit: "Submit",
    subjectLabel: "Subject",
    editProfile: "Edit Avatar",
    editProfileDescription:
      "",
    profileName: "Avatar name (plain text)",
    profileImage: "Avatar image",
    profileDescription: "Avatar description (Markdown)",
    hashtagDescription:
      "Posts from inhabitants in your network that reference this #hashtag, sorted by recency.",
    rebuildName: "Rebuild database",
    wallet: "Wallet",
    walletAddress: "Address",
    walletAmount: "Amount",
    walletAddressLine: ({ address }) => `Address: ${address}`,
    walletAmountLine: ({ amount }) => `Amount: ${amount} ECO`,
    walletBack: "Back",
    walletBalanceTitle: "Balance",
    walletWalletSendTitle: "Send",
    walletReceiveTitle: "Receive",
    walletHistoryTitle: "History",
    walletBalanceLine: ({ balance }) => `${balance} ECO`,
    walletCnfrs: "Cnfrs",
    walletConfirm: "Confirm",
    walletDescription: "Manage your digital assets, including sending and receiving ECOin, viewing your balance, and accessing your transaction history.",
    walletDate: "Date",
    walletFee: "Fee (The higher the fee, the faster your transaction will be processed)",
    walletFeeLine: ({ fee }) => `Fee: ECO ${fee}`,
    walletHistory: "History",
    walletReceive: "Receive",
    walletReset: "Reset",
    walletSend: "Send",
    walletStatus: "Status",
    walletDisconnected: "ECOin wallet disconnected. Check your wallet settings or connection status.",
    walletSentToLine: ({ destination, amount }) => `Sent ECO ${amount} to ${destination}`,
    walletSettingsTitle: "Wallet",
    walletSettingsDescription: "Integrate Oasis with your ECOin wallet.",
    walletStatusMessages: {
      invalid_amount: "Invalid amount",
      invalid_dest: "Invalid destination address",
      invalid_fee: "Invalid fee",
      validation_errors: "Validation errors",
      send_tx_success: "Transaction successful",
    },
    walletTitle: "Wallet",
    walletTotalCostLine: ({ totalCost }) => `Total cost: ECO ${totalCost}`,
    walletTransactionId: "Transaction ID",
    walletTxId: "Tx ID",
    walletType: "Type",
    walletUser: "Username",
    walletPass: "Password",
    walletConfiguration: "Set wallet",
    //cipher
    cipher: "Crypter",
    cipherTitle: "Cipher",
    cipherDescription: "Encrypt and decrypt your text symmetrically (using a shared password).",
    randomPassword: "Random Password",
    cipherEncryptTitle: "Encrypt Text",
    cipherEncryptDescription: "Set password (min 32 characters long) to encrypt your text",
    cipherTextLabel: "Text to Encrypt",
    cipherTextPlaceholder: "Enter text to encrypt...",
    cipherPasswordLabel: "Password",
    cipherPasswordPlaceholder: "Enter a password...",
    cipherEncryptButton: "Encrypt",
    cipherDecryptTitle: "Decrypt Text",
    cipherDecryptDescription: "Enter the encrypted text and password to decrypt.",
    cipherEncryptedTextLabel: "Encrypted Text",
    cipherEncryptedTextPlaceholder: "Enter the encrypted text...",
    cipherIvLabel: "IV",
    cipherIvPlaceholder: "Enter the initialization vector...",
    cipherDecryptButton: "Decrypt",
    password: "Password",
    text: "Text",
    encryptedText: "Encrypted Text",
    iv: "Initialization Vector (IV)",
    encryptTitle: "Encrypt your text",
    encryptDescription: "Enter the text you want to encrypt and provide a password.",
    encryptButton: "Encrypt",
    decryptTitle: "Decrypt your text",
    decryptDescription: "Enter the encrypted text and provide the same password used for encryption.",
    decryptButton: "Decrypt",
    passwordLengthError: "Password must be at least 32 characters long.",
    missingFieldsError: "Text, password or IV not provided.",
    encryptionError: "Error encrypting text.",
    decryptionError: "Error decrypting text."
    }
};
